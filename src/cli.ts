import { buildDatabase } from './DatabaseFactory'
import * as fs from 'fs'
import * as yargs from 'yargs'
import * as path from 'path'
import sqlts, { Config } from './index'
import * as tasks from './EnumTasks'
import * as knex from 'knex'

const args = yargs(process.argv)
.alias('c', 'config')
.describe('c', 'Config file.')
.demandOption(['c'])
.argv

const configPath = path.join(process.cwd(), args.config) 

const config = JSON.parse(fs.readFileSync(configPath, 'utf8')) as Config

;(async () => {
  try {
    // const s = await tasks.getAllEnumTables(db, config)
    
    const output = await sqlts.toTypeScript(config)
    const fileName = `${config.filename || 'Database'}.ts`
    const final = `/*
* This file was generated by a tool.
* To regenerate, run the command sql-ts -c ${path.normalize(args.config).replace('\\','/')}
*/

${output}
`
    const outFile = path.join(process.cwd(), fileName)
    fs.writeFileSync(outFile, final)
    console.log(`Definition file written as ${outFile}.`)
  } catch (err) {
    console.error(err)
  }
})()
